{"input":{"ourVersion":"1.38.0","commit":"3db7e09f3b61f915d03bbfa58e258d6eee843f35","locale":"en","devMode":false,"absoluteFolderPath":"/home/klaus/.vscode-oss/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1567869554829},"result":[{"name":"python","displayName":"Python","description":"Linting, Debugging (multi-threaded, remote), Intellisense, code formatting, refactoring, unit tests, snippets, and more.","version":"2019.9.34911","languageServerVersion":"0.3.66","publisher":"ms-python","author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+python","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.36.0"},"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Snippets","Formatters","Other"],"activationEvents":["onLanguage:python","onLanguage:jupyter","onDebugResolve:python","onCommand:python.execInTerminal","onCommand:python.sortImports","onCommand:python.runtests","onCommand:python.debugtests","onCommand:python.setInterpreter","onCommand:python.setShebangInterpreter","onCommand:python.viewTestUI","onCommand:python.viewTestOutput","onCommand:python.viewOutput","onCommand:python.selectAndRunTestMethod","onCommand:python.selectAndDebugTestMethod","onCommand:python.selectAndRunTestFile","onCommand:python.runCurrentTestFile","onCommand:python.runFailedTests","onCommand:python.execSelectionInTerminal","onCommand:python.execSelectionInDjangoShell","onCommand:python.buildWorkspaceSymbols","onCommand:python.updateSparkLibrary","onCommand:python.startREPL","onCommand:python.goToPythonObject","onCommand:python.setLinter","onCommand:python.enableLinting","onCommand:python.createTerminal","onCommand:python.discoverTests","onCommand:python.configureTests","onCommand:python.datascience.showhistorypane","onCommand:python.datascience.importnotebook","onCommand:python.datascience.selectjupyteruri","onCommand:python.datascience.exportfileasnotebook","onCommand:python.datascience.exportfileandoutputasnotebook","onCommand:python.enableSourceMapSupport"],"main":"./out/client/extension","contributes":{"snippets":[{"language":"python","path":"./snippets/python.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !python.datascience.ownsSelection"},{"command":"python.datascience.execSelectionInteractive","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && python.datascience.ownsSelection && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcelladvance","key":"shift+enter","when":"editorTextFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcell","key":"ctrl+enter","when":"editorTextFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcellandaddbelow","key":"alt+enter","when":"editorTextFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled"}],"commands":[{"command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","category":"Python"},{"command":"python.sortImports","title":"Sort Imports","category":"Python Refactor"},{"command":"python.startREPL","title":"Start REPL","category":"Python"},{"command":"python.createTerminal","title":"Create Terminal","category":"Python"},{"command":"python.buildWorkspaceSymbols","title":"Build Workspace Symbols","category":"Python"},{"command":"python.openTestNodeInEditor","title":"Open","icon":{"light":"resources/light/open-file.svg","dark":"resources/dark/open-file.svg"}},{"command":"python.runTestNode","title":"Run","icon":{"light":"resources/light/start.svg","dark":"resources/dark/start.svg"}},{"command":"python.debugTestNode","title":"Debug","icon":{"light":"resources/light/debug.svg","dark":"resources/dark/debug.svg"}},{"command":"python.runtests","title":"Run All Tests","category":"Python","icon":{"light":"resources/light/run-tests.svg","dark":"resources/dark/run-tests.svg"}},{"command":"python.debugtests","title":"Debug All Tests","category":"Python","icon":{"light":"resources/light/debug.svg","dark":"resources/dark/debug.svg"}},{"command":"python.execInTerminal","title":"Run Python File in Terminal","category":"Python"},{"command":"python.execInTerminal-icon1","title":"Run Python File in Terminal","category":"Python","icon":{"light":"resources/light/start.svg","dark":"resources/dark/start.svg"}},{"command":"python.execInTerminal-icon2","title":"Run Python File in Terminal","category":"Python","icon":{"light":"resources/light/run-file.svg","dark":"resources/dark/run-file.svg"}},{"command":"python.setInterpreter","title":"Select Interpreter","category":"Python"},{"command":"python.switchOffInsidersChannel","title":"Switch to Default Channel","category":"Python"},{"command":"python.switchToDailyChannel","title":"Switch to Insiders Daily Channel","category":"Python"},{"command":"python.switchToWeeklyChannel","title":"Switch to Insiders Weekly Channel","category":"Python"},{"command":"python.updateSparkLibrary","title":"Update Workspace PySpark Libraries","category":"Python"},{"command":"python.refactorExtractVariable","title":"Extract Variable","category":"Python Refactor"},{"command":"python.refactorExtractMethod","title":"Extract Method","category":"Python Refactor"},{"command":"python.viewTestOutput","title":"Show Test Output","category":"Python","icon":{"light":"resources/light/repl.svg","dark":"resources/dark/repl.svg"}},{"command":"python.viewOutput","title":"Show Output","category":"Python","icon":{"light":"resources/light/repl.svg","dark":"resources/dark/repl.svg"}},{"command":"python.selectAndRunTestMethod","title":"Run Test Method ...","category":"Python"},{"command":"python.selectAndDebugTestMethod","title":"Debug Test Method ...","category":"Python"},{"command":"python.selectAndRunTestFile","title":"Run Test File ...","category":"Python"},{"command":"python.runCurrentTestFile","title":"Run Current Test File","category":"Python"},{"command":"python.runFailedTests","title":"Run Failed Tests","category":"Python","icon":{"light":"resources/light/run-failed-tests.svg","dark":"resources/dark/run-failed-tests.svg"}},{"command":"python.discoverTests","title":"Discover Tests","category":"Python","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"python.discoveringTests","title":"Discovering...","category":"Python","icon":{"light":"resources/light/discovering-tests.svg","dark":"resources/dark/discovering-tests.svg"}},{"command":"python.stopTests","title":"Stop","category":"Python","icon":{"light":"resources/light/stop.svg","dark":"resources/dark/stop.svg"}},{"command":"python.configureTests","title":"Configure Tests","category":"Python"},{"command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","category":"Python"},{"command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","category":"Python"},{"command":"python.goToPythonObject","title":"Go to Python Object","category":"Python"},{"command":"python.setLinter","title":"Select Linter","category":"Python"},{"command":"python.enableLinting","title":"Enable Linting","category":"Python"},{"command":"python.runLinting","title":"Run Linting","category":"Python"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python"},{"command":"python.datascience.debugcell","title":"Debug Cell","category":"Python"},{"command":"python.datascience.debugstepover","title":"Step Over","category":"Python"},{"command":"python.datascience.debugstop","title":"Stop","category":"Python"},{"command":"python.datascience.debugcontinue","title":"Continue","category":"Python"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python"},{"command":"python.datascience.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Python"},{"command":"python.datascience.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Python"},{"command":"python.datascience.debugcurrentcell.palette","title":"Debug Current Cell","category":"Python"},{"command":"python.datascience.execSelectionInteractive","title":"Run Selection/Line in Python Interactive Window","category":"Python"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive Window","category":"Python"},{"command":"python.datascience.runFileInteractive","title":"Run Current File in Python Interactive Window","category":"Python"},{"command":"python.datascience.debugFileInteractive","title":"Debug Current File in Python Interactive Window","category":"Python"},{"command":"python.datascience.runallcells","title":"Run All Cells","category":"Python"},{"command":"python.datascience.runallcellsabove","title":"Run Above","category":"Python"},{"command":"python.datascience.runcellandallbelow","title":"Run Below","category":"Python"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python"},{"command":"python.datascience.runtoline","title":"Run To Line in Python Interactive Window","category":"Python"},{"command":"python.datascience.runfromline","title":"Run From Line in Python Interactive Window","category":"Python"},{"command":"python.datascience.selectjupyteruri","title":"Specify Jupyter Server URI","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive Window as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python"},{"command":"python.datascience.undocells","title":"Undo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.redocells","title":"Redo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.removeallcells","title":"Delete All Python Interactive Cells","category":"Python"},{"command":"python.datascience.interruptkernel","title":"Interrupt IPython Kernel","category":"Python"},{"command":"python.datascience.restartkernel","title":"Restart IPython Kernel","category":"Python"},{"command":"python.datascience.expandallcells","title":"Expand All Python Interactive Cells","category":"Python"},{"command":"python.datascience.collapseallcells","title":"Collapse All Python Interactive Cells","category":"Python"},{"command":"python.datascience.addcellbelow","title":"Add Empty Cell to File","category":"Python"},{"command":"python.datascience.scrolltocell","title":"Scroll Cell Into View","category":"Python"}],"menus":{"editor/context":[{"command":"python.refactorExtractVariable","title":"Refactor: Extract Variable","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.refactorExtractMethod","title":"Refactor: Extract Method","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.sortImports","title":"Refactor: Sort Imports","group":"Refactor","when":"editorLangId == python"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python","command":"python.runCurrentTestFile","group":"Python"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runallcells","group":"Python2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcell","group":"Python2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcelladvance","group":"Python2"},{"command":"python.datascience.runFileInteractive","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.featureenabled"},{"command":"python.datascience.runfromline","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.ownsSelection && python.datascience.featureenabled"},{"command":"python.datascience.runtoline","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.ownsSelection && python.datascience.featureenabled"},{"command":"python.datascience.execSelectionInteractive","group":"Python2","when":"editorFocus && editorLangId == python &&  python.datascience.featureenabled && python.datascience.ownsSelection"},{"when":"editorFocus && editorLangId == python && resourceLangId == jupyter && python.datascience.featureenabled","command":"python.datascience.importnotebook","group":"Python3@1"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.exportfileasnotebook","group":"Python3@2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.exportfileandoutputasnotebook","group":"Python3@3"}],"editor/title":[{"command":"python.execInTerminal-icon1","title":"Run Python File in Terminal","group":"navigation","when":"resourceLangId == python && python.showPlayIcon1"},{"command":"python.execInTerminal-icon2","title":"Run Python File in Terminal","group":"navigation","when":"resourceLangId == python && python.showPlayIcon2"}],"explorer/context":[{"when":"resourceLangId == python && !busyTests","command":"python.runtests","group":"Python"},{"when":"resourceLangId == python && !busyTests","command":"python.debugtests","group":"Python"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python && python.datascience.featureenabled","command":"python.datascience.runFileInteractive","group":"Python2"},{"when":"resourceLangId == jupyter","command":"python.datascience.importnotebook","group":"Python"}],"commandPalette":[{"command":"python.switchOffInsidersChannel","title":"Switch to Default Channel","category":"Python","when":"config.python.insidersChannel != 'default'"},{"command":"python.switchToDailyChannel","title":"Switch to Insiders Daily Channel","category":"Python","when":"config.python.insidersChannel != 'daily'"},{"command":"python.switchToWeeklyChannel","title":"Switch to Insiders Weekly Channel","category":"Python","when":"config.python.insidersChannel != 'weekly'"},{"command":"python.viewOutput","title":"Show Output","category":"Python"},{"command":"python.runTestNode","title":"Run","category":"Python","when":"config.noExists"},{"command":"python.discoveringTests","category":"Python","when":"config.noExists"},{"command":"python.stopTests","category":"Python","when":"config.noExists"},{"command":"python.debugTestNode","title":"Debug","category":"Python","when":"config.noExists"},{"command":"python.openTestNodeInEditor","title":"Open","category":"Python","when":"config.noExists"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.debugcurrentcell.palette","title":"Debug Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive Window","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runallcells","title":"Run All Cells","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runFileInteractive","title":"Run Current File in Python Interactive Window","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.debugFileInteractive","title":"Debug Current File in Python Interactive Window","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.undocells","title":"Undo Last Python Interactive Action","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled"},{"command":"python.datascience.redocells","title":"Redo Last Python Interactive Action","category":"Python","when":"python.datascience.haveredoablecells && python.datascience.featureenabled"},{"command":"python.datascience.removeallcells","title":"Delete All Python Interactive Cells","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled"},{"command":"python.datascience.interruptkernel","title":"Interrupt IPython Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.restartkernel","title":"Restart IPython Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.expandallcells","title":"Expand All Python Interactive Cells","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.collapseallcells","title":"Collapse All Python Interactive Cells","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive Window as Jupyter Notebook","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.runcellandallbelow","category":"Python","when":"config.noExists"},{"command":"python.datascience.runallcellsabove","category":"Python","when":"config.noExists"},{"command":"python.datascience.addcellbelow","title":"Add Empty Cell to File","category":"Python","when":"python.datascience.featureenabled"}],"view/title":[{"command":"python.debugtests","when":"view == python_tests && !busyTests","group":"navigation@3"},{"command":"python.runtests","when":"view == python_tests && !busyTests","group":"navigation@1"},{"command":"python.stopTests","when":"view == python_tests && busyTests","group":"navigation@1"},{"command":"python.discoverTests","when":"view == python_tests && !busyTests","group":"navigation@4"},{"command":"python.discoveringTests","when":"view == python_tests && discoveringTests","group":"navigation@4"},{"command":"python.runFailedTests","when":"view == python_tests && hasFailedTests && !busyTests","group":"navigation@2"},{"command":"python.viewTestOutput","when":"view == python_tests","group":"navigation@5"}],"view/item/context":[{"command":"python.runtests","when":"view == python_tests && viewItem == testWorkspaceFolder && !busyTests","group":"inline@0"},{"command":"python.debugtests","when":"view == python_tests && viewItem == testWorkspaceFolder && !busyTests","group":"inline@1"},{"command":"python.discoverTests","when":"view == python_tests && viewItem == testWorkspaceFolder && !busyTests","group":"inline@2"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == testFunction","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == testFunction && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == testFunction && !busyTests","group":"inline@0"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == testFile","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == testFile && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == testFile && !busyTests","group":"inline@0"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == testSuite","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == testSuite && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == testSuite && !busyTests","group":"inline@0"}]},"breakpoints":[{"language":"python"},{"language":"html"},{"language":"jinja"}],"debuggers":[{"type":"python","label":"Python","languages":["python"],"program":"./out/client/debugger/debugAdapter/main.js","runtime":"node","configurationSnippets":[],"configurationAttributes":{"launch":{"properties":{"module":{"type":"string","description":"Name of the module to be debugged.","default":""},"program":{"type":"string","description":"Absolute path to the program.","default":"${file}"},"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings.json","default":"${config:python.pythonPath}"},"args":{"type":"array","description":"Command line arguments passed to the program","default":[],"items":{"type":"string"}},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":true},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"integratedTerminal"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"port":{"type":"number","description":"Debug port (default is 0, resulting in the use of a dynamic port).","default":0},"host":{"type":"string","description":"IP address of the of the local debug server (default is localhost).","default":"localhost"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"justMyCode":{"type":"boolean","description":"Debug only user-written code.","default":true},"gevent":{"type":"boolean","description":"Enable debugging of gevent monkey-patched code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"sudo":{"type":"boolean","description":"Running debug program under elevated permissions (on Unix).","default":false},"pyramid":{"type":"boolean","description":"Whether debugging Pyramid applications","default":false},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false}}},"test":{"properties":{"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings.json","default":"${config:python.pythonPath}"},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":true},"console":{"enum":["none","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"none"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"justMyCode":{"type":"boolean","description":"Debug only user-written code.","default":true}}},"attach":{"required":["port"],"properties":{"port":{"type":"number","description":"Debug port to attach","default":0},"host":{"type":"string","description":"IP Address of the of remote server (default is localhost or use 127.0.0.1).","default":"localhost"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"justMyCode":{"type":"boolean","description":"Debug only user-written code.","default":true},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":true}}}}}],"configuration":{"type":"object","title":"Python","properties":{"python.diagnostics.sourceMapsEnabled":{"type":"boolean","default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application"},"python.autoComplete.addBrackets":{"type":"boolean","default":false,"description":"Automatically add brackets for functions.","scope":"resource"},"python.autoComplete.extraPaths":{"type":"array","default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource"},"python.autoComplete.showAdvancedMembers":{"type":"boolean","default":true,"description":"Controls appearance of methods with double underscores in the completion list.","scope":"resource"},"python.autoComplete.typeshedPaths":{"type":"array","items":{"type":"string"},"default":[],"description":"Specifies paths to local typeshed repository clone(s) for the Python language server.","scope":"resource"},"python.autoUpdateLanguageServer":{"type":"boolean","default":true,"description":"Automatically update the language server.","scope":"application"},"python.dataScience.allowImportFromNotebook":{"type":"boolean","default":true,"description":"Allows a user to import a jupyter notebook into a python file anytime one is opened.","scope":"resource"},"python.dataScience.gatherRules":{"type":"array","default":[{"objectName":"df","functionName":"head","doesNotModify":["OBJECT"]},{"objectName":"df","functionName":"describe","doesNotModify":["OBJECT"]},{"objectName":"df","functionName":"tail","doesNotModify":["OBJECT"]},{"functionName":"print","doesNotModify":["ARGUMENTS"]},{"functionName":"KMeans","doesNotModify":["ARGUMENTS"]},{"functionName":"scatter","doesNotModify":["ARGUMENTS"]},{"functionName":"fit","doesNotModify":["ARGUMENTS"]},{"functionName":"sum","doesNotModify":["ARGUMENTS"]},{"functionName":"len","doesNotModify":["ARGUMENTS"]}]},"python.dataScience.askForLargeDataFrames":{"type":"boolean","default":true,"description":"Warn the user before trying to open really large data frames.","scope":"application"},"python.dataScience.askForKernelRestart":{"type":"boolean","default":true,"description":"Warn the user before restarting a kernel.","scope":"application"},"python.dataScience.enabled":{"type":"boolean","default":true,"description":"Enable the experimental data science features in the python extension.","scope":"resource"},"python.dataScience.exportWithOutputEnabled":{"type":"boolean","default":false,"description":"Enable exporting a python file into a jupyter notebook and run all cells when doing so.","scope":"resource"},"python.dataScience.jupyterLaunchTimeout":{"type":"number","default":60000,"description":"Amount of time (in ms) to wait for the Jupyter Notebook server to start.","scope":"resource"},"python.dataScience.jupyterLaunchRetries":{"type":"number","default":3,"description":"Number of times to attempt to connect to the Jupyter Notebook","scope":"resource"},"python.dataScience.jupyterServerURI":{"type":"string","default":"local","description":"Select the Jupyter server URI to connect to. Select 'local' to launch a new Juypter server on the local machine.","scope":"resource"},"python.dataScience.notebookFileRoot":{"type":"string","default":"${workspaceFolder}","description":"Set the root directory for loading files for the Python Interactive window.","scope":"resource"},"python.dataScience.searchForJupyter":{"type":"boolean","default":true,"description":"Search all installed Python interpreters for a Jupyter installation when starting the Python Interactive window","scope":"resource"},"python.dataScience.changeDirOnImportExport":{"type":"boolean","default":true,"description":"When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.","scope":"resource"},"python.dataScience.useDefaultConfigForJupyter":{"type":"boolean","default":true,"description":"When running Jupyter locally, create a default empty Jupyter config for the Python Interactive window","scope":"resource"},"python.dataScience.jupyterInterruptTimeout":{"type":"number","default":10000,"description":"Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.","scope":"resource"},"python.dataScience.allowInput":{"type":"boolean","default":true,"description":"Allow the inputting of python code directly into the Python Interactive window"},"python.dataScience.showCellInputCode":{"type":"boolean","default":true,"description":"Show cell input code.","scope":"resource"},"python.dataScience.collapseCellInputCodeByDefault":{"type":"boolean","default":true,"description":"Collapse cell input code by default.","scope":"resource"},"python.dataScience.maxOutputSize":{"type":"number","default":400,"description":"Maximum size (in pixels) of text output in the Python Interactive window before a scrollbar appears. Set to -1 for infinity.","scope":"resource"},"python.dataScience.errorBackgroundColor":{"type":"string","default":"#FFFFFF","description":"Background color (in hex) for exception messages in the Python Interactive window.","scope":"resource","deprecationMessage":"No longer necessary as the theme colors are used for error messages"},"python.dataScience.sendSelectionToInteractiveWindow":{"type":"boolean","default":false,"description":"Determines if selected code in a python file will go to the terminal or the Python Interactive window when hitting shift+enter","scope":"resource"},"python.dataScience.showJupyterVariableExplorer":{"type":"boolean","default":true,"description":"Show the variable explorer in the Python Interactive window.","scope":"resource"},"python.dataScience.variableExplorerExclude":{"type":"string","default":"module;function;builtin_function_or_method","description":"Types to exclude from showing in the Python Interactive variable explorer","scope":"resource"},"python.dataScience.codeRegularExpression":{"type":"string","default":"^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])","description":"Regular expression used to identify code cells. All code until the next match is considered part of this cell. \nDefaults to '^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])' if left blank","scope":"resource"},"python.dataScience.markdownRegularExpression":{"type":"string","default":"^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)","description":"Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown. \nDefaults to '^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)' if left blank","scope":"resource"},"python.dataScience.allowLiveShare":{"type":"boolean","default":true,"description":"Allow the Python Interactive window to be shared during a Live Share session","scope":"resource"},"python.dataScience.ignoreVscodeTheme":{"type":"boolean","default":false,"description":"Don't use the VS Code theme in the Python Interactive window (requires reload of VS Code). This forces the Python Interactive window to use 'Light +(default light)' and disables matplotlib defaults.","scope":"resource"},"python.dataScience.liveShareConnectionTimeout":{"type":"number","default":1000,"description":"Amount of time to wait for guest connections to verify they have the Python extension installed.","scope":"application"},"python.dataScience.decorateCells":{"type":"boolean","default":true,"description":"Draw a highlight behind the currently active cell.","scope":"resource"},"python.dataScience.enableCellCodeLens":{"type":"boolean","default":true,"description":"Enables code lens for 'cells' in a python file.","scope":"resource"},"python.dataScience.enableAutoMoveToNextCell":{"type":"boolean","default":true,"description":"Enables moving to the next cell when clicking on a 'Run Cell' code lens.","scope":"resource"},"python.dataScience.autoPreviewNotebooksInInteractivePane":{"type":"boolean","default":false,"description":"When opening ipynb files, automatically preview the contents in the Python Interactive window.","scope":"resource"},"python.dataScience.allowUnauthorizedRemoteConnection":{"type":"boolean","default":false,"description":"Allow for connecting the Python Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.","scope":"resource"},"python.dataScience.enablePlotViewer":{"type":"boolean","default":true,"description":"Modify plot output so that it can be expanded into a plot viewer window.","scope":"resource"},"python.dataScience.enableGather":{"type":"boolean","default":false,"description":"Enable code gathering for single cells in the interactive window (experimental).","scope":"resource"},"python.dataScience.codeLenses":{"type":"string","default":"python.datascience.runcell,  python.datascience.runallcellsabove, python.datascience.debugcell","description":"Set of commands to put as code lens above a cell. Defaults to 'python.datascience.runcell,  python.datascience.runallcellsabove, python.datascience.debugcell'","scope":"resource"},"python.dataScience.debugCodeLenses":{"type":"string","default":"python.datascience.debugcontinue, python.datascience.debugstop, python.datascience.debugstepover","description":"Set of debug commands to put as code lens above a cell while debugging.","scope":"resource"},"python.dataScience.ptvsdDistPath":{"type":"string","default":"","description":"Path to ptvsd experimental bits for debugging cells.","scope":"resource"},"python.dataScience.stopOnFirstLineWhileDebugging":{"type":"boolean","default":true,"description":"When debugging a cell, stop on the first line.","scope":"resource"},"python.dataScience.remoteDebuggerPort":{"type":"number","default":-1,"description":"When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.","scope":"resource"},"python.dataScience.textOutputLimit":{"type":"number","default":20000,"description":"Limit the amount of text in Python Interactive cell text output to this value. 0 to allow any amount of characters.","scope":"resource"},"python.dataScience.colorizeInputBox":{"type":"boolean","default":true,"description":"Whether or not to use the theme's peek color as the background for the input box.","scope":"resource"},"python.dataScience.stopOnError":{"type":"boolean","default":true,"description":"Stop running cells if a cell throws an exception.","scope":"resource"},"python.dataScience.addGotoCodeLenses":{"type":"boolean","default":true,"description":"After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.","scope":"resource"},"python.disableInstallationCheck":{"type":"boolean","default":false,"description":"Whether to check if Python is installed (also warn when using the macOS-installed Python).","scope":"resource"},"python.envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env","scope":"resource"},"python.formatting.autopep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.autopep8Path":{"type":"string","default":"autopep8","description":"Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.","scope":"resource"},"python.formatting.provider":{"type":"string","default":"autopep8","description":"Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.","enum":["autopep8","black","yapf","none"],"scope":"resource"},"python.formatting.blackArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.blackPath":{"type":"string","default":"black","description":"Path to Black, you can use a custom version of Black by modifying this setting to include the full path.","scope":"resource"},"python.formatting.yapfArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.yapfPath":{"type":"string","default":"yapf","description":"Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.","scope":"resource"},"python.globalModuleInstallation":{"type":"boolean","default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource"},"python.jediEnabled":{"type":"boolean","default":true,"description":"Enables Jedi as IntelliSense engine instead of Microsoft Python Analysis Engine.","scope":"resource"},"python.jediMemoryLimit":{"type":"number","default":0,"description":"Memory limit for the Jedi completion engine in megabytes. Zero (default) means 1024 MB. -1 means unlimited (disable memory limit check)","scope":"resource"},"python.jediPath":{"type":"string","default":"","description":"Path to directory containing the Jedi library (this path will contain the 'Jedi' sub directory).","scope":"resource"},"python.analysis.openFilesOnly":{"type":"boolean","default":true,"description":"Only show errors and warnings for open files rather than for the entire workspace.","scope":"resource"},"python.analysis.diagnosticPublishDelay":{"type":"integer","default":1000,"description":"Delay before diagnostic messages are transferred to the problems list (in milliseconds).","scope":"resource"},"python.analysis.errors":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as errors.","scope":"resource"},"python.analysis.warnings":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as warnings.","scope":"resource"},"python.analysis.information":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as information.","scope":"resource"},"python.analysis.disabled":{"type":"array","default":[],"items":{"type":"string"},"description":"List of suppressed diagnostic messages.","scope":"resource"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to Typeshed stub folders. Default is Typeshed installed with the language server. Change requires restart.","scope":"resource"},"python.analysis.cacheFolderPath":{"type":"string","description":"Path to a writable folder where analyzer can cache its data. Change requires restart.","scope":"resource"},"python.analysis.memory.keepLibraryAst":{"type":"boolean","default":false,"description":"Allows code analysis to keep parser trees in memory. Increases memory consumption but may improve performance with large library analysis.","scope":"resource"},"python.analysis.memory.keepLibraryLocalVariables":{"type":"boolean","default":false,"description":"Allows code analysis to keep library function local variables. Allows code navigation in Python libraries function bodies. Increases memory consumption.","scope":"resource"},"python.analysis.logLevel":{"type":"string","enum":["Error","Warning","Information","Trace"],"default":"Error","description":"Defines type of log messages language server writes into the output window.","scope":"resource"},"python.analysis.symbolsHierarchyDepthLimit":{"type":"integer","default":10,"description":"Limits depth of the symbol tree in the document outline.","scope":"resource"},"python.linting.enabled":{"type":"boolean","default":true,"description":"Whether to lint Python files.","scope":"resource"},"python.linting.flake8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.flake8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.F":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Flake8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using flake8","scope":"resource"},"python.linting.flake8Path":{"type":"string","default":"flake8","description":"Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.ignorePatterns":{"type":"array","description":"Patterns used to exclude files or folders from being linted.","default":[".vscode/*.py","**/site-packages/**/*.py"],"items":{"type":"string"},"scope":"resource"},"python.linting.lintOnSave":{"type":"boolean","default":true,"description":"Whether to lint Python files when saved.","scope":"resource"},"python.linting.maxNumberOfProblems":{"type":"number","default":100,"description":"Controls the maximum number of problems produced by the server.","scope":"resource"},"python.linting.banditArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.banditEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using bandit.","scope":"resource"},"python.linting.banditPath":{"type":"string","default":"bandit","description":"Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.","scope":"resource"},"python.linting.mypyArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["--ignore-missing-imports","--follow-imports=silent","--show-column-numbers"],"items":{"type":"string"},"scope":"resource"},"python.linting.mypyCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Mypy message type 'Error'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyCategorySeverity.note":{"type":"string","default":"Information","description":"Severity of Mypy message type 'Note'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using mypy.","scope":"resource"},"python.linting.mypyPath":{"type":"string","default":"mypy","description":"Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.","scope":"resource"},"python.linting.pep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pep8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Pep8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Pep8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pep8","scope":"resource"},"python.linting.pep8Path":{"type":"string","default":"pep8","description":"Path to pep8, you can use a custom version of pep8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.prospectorArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.prospectorEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using prospector.","scope":"resource"},"python.linting.prospectorPath":{"type":"string","default":"prospector","description":"Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.","scope":"resource"},"python.linting.pydocstyleArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pydocstyleEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pydocstyle","scope":"resource"},"python.linting.pydocstylePath":{"type":"string","default":"pydocstyle","description":"Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylamaArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylamaEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pylama.","scope":"resource"},"python.linting.pylamaPath":{"type":"string","default":"pylama","description":"Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylintCategorySeverity.convention":{"type":"string","default":"Information","description":"Severity of Pylint message type 'Convention/C'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Error/E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.fatal":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Fatal/F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.refactor":{"type":"string","default":"Hint","description":"Severity of Pylint message type 'Refactor/R'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.warning":{"type":"string","default":"Warning","description":"Severity of Pylint message type 'Warning/W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintEnabled":{"type":"boolean","default":true,"description":"Whether to lint Python files using pylint.","scope":"resource"},"python.linting.pylintPath":{"type":"string","default":"pylint","description":"Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintUseMinimalCheckers":{"type":"boolean","default":true,"description":"Whether to run Pylint with minimal set of rules.","scope":"resource"},"python.pythonPath":{"type":"string","default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"resource"},"python.condaPath":{"type":"string","default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"resource"},"python.pipenvPath":{"type":"string","default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"resource"},"python.poetryPath":{"type":"string","default":"poetry","description":"Path to the poetry executable.","scope":"resource"},"python.sortImports.args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.sortImports.path":{"type":"string","description":"Path to isort script, default using inner version","default":"","scope":"resource"},"python.terminal.activateEnvironment":{"type":"boolean","default":true,"description":"Activate Python Environment in Terminal created using the Extension.","scope":"resource"},"python.terminal.executeInFileDir":{"type":"boolean","default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource"},"python.terminal.launchArgs":{"type":"array","default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource"},"python.testing.cwd":{"type":"string","default":null,"description":"Optional working directory for tests.","scope":"resource"},"python.testing.debugPort":{"type":"number","default":3000,"description":"Port number used for debugging of tests.","scope":"resource"},"python.testing.nosetestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.testing.nosetestsEnabled":{"type":"boolean","default":false,"description":"Enable testing using nosetests.","scope":"resource"},"python.testing.nosetestPath":{"type":"string","default":"nosetests","description":"Path to nosetests, you can use a custom version of nosetests by modifying this setting to include the full path.","scope":"resource"},"python.testing.promptToConfigure":{"type":"boolean","default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource"},"python.testing.pytestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.testing.pytestEnabled":{"type":"boolean","default":false,"description":"Enable testing using pytest.","scope":"resource"},"python.testing.pytestPath":{"type":"string","default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"resource"},"python.testing.unittestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["-v","-s",".","-p","*test*.py"],"items":{"type":"string"},"scope":"resource"},"python.testing.unittestEnabled":{"type":"boolean","default":false,"description":"Enable testing using unittest.","scope":"resource"},"python.testing.autoTestDiscoverOnSaveEnabled":{"type":"boolean","default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource"},"python.venvFolders":{"type":"array","default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","scope":"resource","items":{"type":"string"}},"python.venvPath":{"type":"string","default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"resource"},"python.workspaceSymbols.ctagsPath":{"type":"string","default":"ctags","description":"Fully qualified path to the ctags executable (else leave as ctags, assuming it is in current path).","scope":"resource"},"python.workspaceSymbols.enabled":{"type":"boolean","default":true,"description":"Set to 'false' to disable Workspace Symbol provider using ctags.","scope":"resource"},"python.workspaceSymbols.exclusionPatterns":{"type":"array","default":["**/site-packages/**"],"items":{"type":"string"},"description":"Pattern used to exclude files and folders from ctags See http://ctags.sourceforge.net/ctags.html.","scope":"resource"},"python.workspaceSymbols.rebuildOnFileSave":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on when changes made to python files are saved.","scope":"resource"},"python.workspaceSymbols.rebuildOnStart":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on start (defaults to true).","scope":"resource"},"python.workspaceSymbols.tagFilePath":{"type":"string","default":"${workspaceFolder}/.vscode/tags","description":"Fully qualified path to tag file (exuberant ctag file), used to provide workspace symbols.","scope":"resource"},"python.dataScience.magicCommandsAsComments":{"type":"boolean","default":false,"description":"Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.","scope":"resource"},"python.dataScience.runMagicCommands":{"type":"string","default":"","description":"A series of Python instructions that will be executed when the interactive window loads.","scope":"resource"},"python.dataScience.debugJustMyCode":{"type":"boolean","default":true,"description":"When debugging, debug just my code.","scope":"resource"},"python.insidersChannel":{"type":"string","default":"off","description":"Set to \"weekly\" or \"daily\" to automatically download and install the latest Insiders builds of the python extension, which include upcoming features and bug fixes.","enum":["off","weekly","daily"],"scope":"application"}}},"languages":[{"id":"pip-requirements","aliases":["pip requirements","requirements.txt"],"filenames":["requirements.txt","constraints.txt","requirements.in"],"filenamePatterns":["*-requirements.txt","requirements-*.txt","constraints-*.txt","*-constraints.txt","*-requirements.in","requirements-*.in"],"configuration":"./languages/pip-requirements.json"},{"id":"yaml","filenames":[".condarc"]},{"id":"toml","filenames":["Pipfile"]},{"id":"json","filenames":["Pipfile.lock"]},{"id":"jinja","extensions":[".jinja2",".j2"],"aliases":["Jinja"]},{"id":"jupyter","extensions":[".ipynb"]}],"grammars":[{"language":"pip-requirements","scopeName":"source.pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"views":{"test":[{"id":"python_tests","name":"PYTHON","when":"testsDiscovered"}]}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","compile":"tsc -watch -p ./","compile-webviews-watch":"npx npx -n --max_old_space_size=4096 webpack --config webpack.datascience-ui.config.js --watch","dump-datascience-webpack-stats":"npx -n --max_old_space_size=4096 webpack --config webpack.datascience-ui.config.js --profile --json > tmp/ds-stats.json","compile-webviews":"gulp compile-webviews","compile-webviews-verbose":"npx webpack --config webpack.datascience-ui.config.js","postinstall":"node ./build/ci/postInstall.js","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --opts ./build/.mocha.unittests.js.opts","test:unittests:cover":"nyc --silent --no-clean --nycrc-path build/.nycrc mocha --opts ./build/.mocha.unittests.ts.opts","test:functional":"mocha --require source-map-support/register --opts ./build/.mocha.functional.opts","test:functional:cover":"npm run test:functional","test:cover:report":"nyc --nycrc-path build/.nycrc  report --reporter=lcov --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"node ./out/test/smokeTest.js","lint-staged":"node gulpfile.js","lint":"tslint src/**/*.ts -t verbose","clean":"gulp clean","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle"},"dependencies":{"@jupyterlab/services":"^3.2.1","@msrvida/python-program-analysis":"0.0.5","ansi-regex":"^4.1.0","arch":"^2.1.0","azure-storage":"^2.10.3","diff-match-patch":"^1.0.0","fs-extra":"^4.0.3","fuzzy":"^0.1.3","get-port":"^3.2.0","glob":"^7.1.2","hash.js":"^1.1.7","iconv-lite":"^0.4.21","inversify":"^4.11.1","jison":"^0.4.18","jsonc-parser":"^2.0.3","less-plugin-inline-urls":"^1.2.0","line-by-line":"^0.1.6","lodash":"^4.17.15","md5":"^2.2.1","minimatch":"^3.0.4","monaco-editor-textmate":"^2.1.1","monaco-textmate":"^3.0.0","named-js-regexp":"^1.3.3","node-fetch":"^1.0.0","node-stream-zip":"^1.6.0","onigasm":"^2.2.2","pdfkit":"^0.10.0","pidusage":"^1.2.0","react-svg-pan-zoom":"^3.1.0","react-svgmt":"^1.1.8","react-virtualized":"^9.21.1","reflect-metadata":"^0.1.12","request":"^2.87.0","request-progress":"^3.0.0","rxjs":"^5.5.9","semver":"^5.5.0","slickgrid":"^2.4.7","stack-trace":"0.0.10","strip-ansi":"^5.2.0","strip-json-comments":"^2.0.1","sudo-prompt":"^8.2.0","svg-to-pdfkit":"^0.1.7","tmp":"^0.0.29","tree-kill":"^1.2.0","tslint":"^5.14.0","typescript-char":"^0.0.0","uint64be":"^1.0.1","unicode":"^10.0.0","untildify":"^3.0.2","vscode-debugadapter":"^1.28.0","vscode-debugprotocol":"^1.28.0","vscode-extension-telemetry":"0.1.0","vscode-languageclient":"^5.2.1","vscode-languageserver":"^5.2.1","vscode-languageserver-protocol":"^3.14.1","vsls":"^0.3.1291","winreg":"^1.2.4","winston":"^3.2.1","ws":"^6.0.0","xml2js":"^0.4.19"},"devDependencies":{"@babel/cli":"^7.4.4","@babel/core":"^7.4.4","@babel/plugin-transform-runtime":"^7.4.4","@babel/polyfill":"^7.4.4","@babel/preset-env":"^7.1.0","@babel/preset-react":"^7.0.0","@babel/register":"^7.4.4","@istanbuljs/nyc-config-typescript":"^0.1.3","@nteract/plotly":"^1.48.3","@nteract/transform-dataresource":"^4.3.5","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^5.0.0","@nteract/transforms":"^4.4.4","@types/ansi-regex":"^4.0.0","@types/chai":"^4.1.2","@types/chai-arrays":"^1.0.2","@types/chai-as-promised":"^7.1.0","@types/copy-webpack-plugin":"^4.4.2","@types/del":"^3.0.0","@types/diff-match-patch":"^1.0.32","@types/download":"^6.2.2","@types/enzyme":"^3.1.14","@types/enzyme-adapter-react-16":"^1.0.3","@types/event-stream":"^3.3.33","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/html-webpack-plugin":"^3.2.0","@types/iconv-lite":"^0.0.1","@types/jquery":"^1.10.35","@types/jsdom":"^11.12.0","@types/loader-utils":"^1.1.3","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/mocha":"^5.2.7","@types/nock":"^10.0.3","@types/node":"9.4.7","@types/node-fetch":"^2.3.4","@types/pdfkit":"^0.7.36","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/react-virtualized":"^9.21.2","@types/request":"^2.47.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^7.0.13","@types/stack-trace":"0.0.29","@types/strip-json-comments":"0.0.30","@types/temp":"^0.8.32","@types/tmp":"0.0.33","@types/untildify":"^3.0.0","@types/uuid":"^3.4.3","@types/vscode":"^1.36.0","@types/webpack-bundle-analyzer":"^2.13.0","@types/winreg":"^1.2.30","@types/ws":"^6.0.1","@types/xml2js":"^0.4.2","JSONStream":"^1.3.2","ansi-to-html":"^0.6.7","awesome-typescript-loader":"^5.2.1","babel-loader":"^8.0.3","babel-plugin-inline-json-import":"^0.3.1","babel-plugin-transform-runtime":"^6.23.0","babel-polyfill":"^6.26.0","bootstrap":"^4.3.1","bootstrap-less":"^3.3.8","brfs":"^2.0.2","canvas":"2.0.1","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","codecov":"^3.5.0","colors":"^1.2.1","copy-webpack-plugin":"^4.6.0","cross-spawn":"^6.0.5","css-loader":"^1.0.1","cucumber-html-reporter":"^4.0.5","decache":"^4.4.0","del":"^3.0.0","download":"^7.0.0","electron-download":"^4.1.1","enzyme":"^3.7.0","enzyme-adapter-react-16":"^1.6.0","event-stream":"3.3.4","expose-loader":"^0.7.5","extract-zip":"^1.6.7","file-loader":"^2.0.0","filemanager-webpack-plugin":"^2.0.5","flat":"^4.0.0","gulp":"^4.0.0","gulp-azure-storage":"^0.9.0","gulp-chmod":"^2.0.0","gulp-filter":"^5.1.0","gulp-gunzip":"^1.1.0","gulp-rename":"^1.4.0","gulp-sourcemaps":"^2.6.4","gulp-typescript":"^4.0.1","gulp-untar":"0.0.8","gulp-vinyl-zip":"^2.1.2","html-webpack-plugin":"^3.2.0","husky":"^1.1.2","immutable":"^4.0.0-rc.12","is-running":"^2.1.0","jsdom":"^15.0.0","json-loader":"^0.5.7","less":"^3.9.0","less-loader":"^5.0.0","loader-utils":"^1.1.0","mocha":"^6.1.4","mocha-junit-reporter":"^1.17.0","mocha-multi-reporters":"^1.1.7","monaco-editor":"0.16.2","monaco-editor-webpack-plugin":"^1.7.0","nock":"^10.0.6","node-has-native-dependencies":"^1.0.2","node-html-parser":"^1.1.13","nyc":"^14.1.1","raw-loader":"^0.5.1","react":"^16.5.2","react-data-grid":"^6.0.2-0","react-dev-utils":"^5.0.2","react-dom":"^16.5.2","react-json-tree":"^0.11.0","relative":"^3.0.2","retyped-diff-match-patch-tsd-ambient":"^1.0.0-0","rewiremock":"^3.13.0","sass-loader":"^7.1.0","shortid":"^2.2.8","sinon":"^7.3.2","source-map-support":"^0.5.12","style-loader":"^0.23.1","styled-jsx":"^3.1.0","svg-inline-loader":"^0.8.0","svg-inline-react":"^3.1.0","terser-webpack-plugin":"^1.2.3","transform-loader":"^0.2.4","ts-loader":"^5.3.0","ts-mockito":"^2.3.1","ts-node":"^8.3.0","tsconfig-paths-webpack-plugin":"^3.2.0","tslint-eslint-rules":"^5.1.0","tslint-microsoft-contrib":"^5.0.3","typed-react-markdown":"^0.1.0","typemoq":"^2.1.0","typescript":"^3.5.2","typescript-formatter":"^7.1.0","unicode-properties":"1.1.0","url-loader":"^1.1.2","uuid":"^3.3.2","vinyl-fs":"^3.0.3","vsce":"^1.59.0","vscode-debugadapter-testsupport":"^1.27.0","vscode-test":"^1.0.2","webpack":"^4.33.0","webpack-bundle-analyzer":"^3.3.2","webpack-cli":"^3.1.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^4.1.4","webpack-node-externals":"^1.7.2","why-is-node-running":"^2.0.3","wtfnode":"^0.8.0","yargs":"^12.0.2"},"uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.python","identifier":{"value":"ms-python.python","_lower":"ms-python.python"},"extensionLocation":{"$mid":1,"fsPath":"/home/klaus/.vscode-oss/extensions/ms-python.python-2019.9.34911","path":"/home/klaus/.vscode-oss/extensions/ms-python.python-2019.9.34911","scheme":"file"}},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"0.25.1","publisher":"ms-vscode","preview":true,"icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.30.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"activationEvents":["onLanguage:cpp","onLanguage:c","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.BuildAndDebugActiveFile","onCommand:C_Cpp.ConfigurationEditJSON","onCommand:C_Cpp.ConfigurationEditUI","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.ConfigurationProviderSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.Navigate","onCommand:C_Cpp.EnableErrorSquiggles","onCommand:C_Cpp.DisableErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.TakeSurvey","onCommand:C_Cpp.LogDiagnostics","onCommand:C_Cpp.RescanWorkspace","onCommand:C_Cpp.VcpkgClipboardInstallSuggested","onCommand:C_Cpp.VcpkgClipboardOnlineHelpSuggested","onDebug","workspaceContains:/.vscode/c_cpp_properties.json"],"main":"./dist/main","contributes":{"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^(.*):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.clang_format_path":{"type":["string","null"],"default":null,"description":"The full path of the clang-format executable.","scope":"resource"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results. \"Disabled\" turns off C/C++ language service features.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled","EnabledIfIncludesResolve"],"default":"EnabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"Description":"Controls the opacity of inactive preprocessor blocks. Scales between 0.1 and 1.0. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":["string","null"],"default":null,"description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":["string","null"],"default":null,"description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"\"Default\" enables code formatting. \"Disabled\" disables code formatting.","scope":"resource"},"C_Cpp.navigation.length":{"type":"number","default":60,"description":"Maximum character length of the scope/navigation UI in the status bar. The UI may not appear if this value is too large.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"resource"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"resource"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked","scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"resource"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.intelliSenseCachePath":{"type":"string","default":null,"description":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is \"%LocalAppData%/Microsoft/vscode-cpptools\" on Windows and \"~/.vscode-cpptools\" on Linux and Mac. The default path will be used if no path is specified or if a specified path is invalid.","scope":"resource"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"description":"Maximum size of the per-workspace hard drive space in megabytes for cached precompiled headers; the actual usage may fluctuate around this value. The default size is 5120 MB. Precompiled header caching is disabled when the size is 0.","scope":"resource","minimum":0},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified, or the values to insert if \"${default}\" is present in \"includePath\".","scope":"resource"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"resource"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"resource"},"C_Cpp.default.windowsSdkVersion":{"type":["string","null"],"default":null,"description":"Version of the Windows SDK include path to use on Windows, e.g. '10.0.17134.0'.","pattern":"^\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1$","scope":"resource"},"C_Cpp.default.compileCommands":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"resource"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"resource"},"C_Cpp.default.intelliSenseMode":{"type":["string","null"],"enum":["msvc-x64","gcc-x64","clang-x64","msvc-x86","gcc-x86","clang-x86"],"default":null,"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerArgs":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in configuration if \"compilerArgs\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cStandard":{"type":["string","null"],"enum":["c89","c99","c11"],"default":null,"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cppStandard":{"type":["string","null"],"enum":["c++98","c++03","c++11","c++14","c++17","c++20"],"default":null,"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"configurationProvider\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"resource"},"C_Cpp.default.browse.databaseFilename":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"resource"},"C_Cpp.default.enableConfigurationSquiggles":{"type":["boolean","null"],"default":null,"description":"Controls whether the extension will report errors detected in c_cpp_properties.json.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","description":"Set to \"Insiders\" to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"resource"},"C_Cpp.experimentalFeatures":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether \"experimental\" features are usable.","scope":"resource"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"description":"If true, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code is colorized based on IntelliSense. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.Navigate","title":"Navigate...","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugActiveFile","title":"Build and Debug Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'c'"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Arguments for the mi debugger (such as gdb) to use. When unspecified.","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"attach":{"type":"object","default":{},"required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}}}}}}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"./c_cpp_properties.schema.json"}],"menus":{"editor/context":[{"when":"editorLangId == c","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == cpp","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == c","command":"C_Cpp.Navigate","group":"other1_navigation@2"},{"when":"editorLangId == cpp","command":"C_Cpp.Navigate","group":"other1_navigation@2"},{"when":"editorLangId == c","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == cpp","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == c","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"},{"when":"editorLangId == c","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":false},"[c]":{"editor.wordBasedSuggestions":false},"[Log]":{"editor.wordWrap":"off"}}},"scripts":{"compile":"npm run vscode:prepublish","compileDev":"npm run prepublishjs && webpack --mode development","generateOptionsSchema":"gulp generateOptionsSchema","postinstall":"node ./node_modules/vscode/bin/install","prepublishjs":"node ./tools/prepublish.js","pretest":"tsc -p test.tsconfig.json","pr-check":"gulp pr-check","tslint":"gulp tslint","unitTests":"gulp unitTests","vscode:prepublish":"npm run prepublishjs && webpack --mode production","watch":"webpack --watch --mode development"},"devDependencies":{"@types/minimatch":"^3.0.3","@types/mkdirp":"^0.5.2","@types/mocha":"^5.2.7","@types/node":"^12.7.2","@types/plist":"^3.0.2","@types/tmp":"^0.1.0","@types/webpack":"^4.39.0","@types/yauzl":"^2.9.1","async-child-process":"^1.1.1","await-notify":"^1.0.1","gulp":"^4.0.2","gulp-env":"^0.4.0","gulp-mocha":"^7.0.1","gulp-tslint":"^8.1.4","ts-loader":"^6.0.4","tslint":"^5.19.0","tslint-microsoft-contrib":"^6.2.0","tslint-no-unused-expression-chai":"^0.1.4","typescript":"^3.5.3","vrsource-tslint-rules":"^6.0.0","vscode":"^1.1.36","webpack":"^4.39.2","webpack-cli":"^3.3.7"},"dependencies":{"escape-string-regexp":"^2.0.0","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.2","jsonc-parser":"^2.1.1","minimatch":"^3.0.4","mkdirp":"^0.5.1","plist":"^3.0.1","tmp":"^0.1.0","vscode-cpptools":"^3.0.1","vscode-debugadapter":"^1.35.0","vscode-debugprotocol":"^1.35.0","vscode-extension-telemetry":"^0.1.2","vscode-languageclient":"^5.2.1","yauzl":"^2.10.0"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2102112","platforms":["linux"],"architectures":["x86_64"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (Linux / x86)","url":"https://go.microsoft.com/fwlink/?linkid=2102307","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=2102306","platforms":["darwin"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.darwin","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.darwin"]},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2102113","platforms":["win32"],"binaries":[]},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=872607","platforms":["linux"],"architectures":["x86_64"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkID=872608","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=872609","platforms":["darwin"],"binaries":["./LLVM/bin/clang-format.darwin"]},{"description":"ClangFormat (Windows)","url":"https://go.microsoft.com/fwlink/?LinkID=872610","platforms":["win32"],"binaries":[]},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=2027135","platforms":["linux","darwin"],"binaries":[]},{"description":"Mono Runtime (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkId=2027410","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./debugAdapters/mono.linux-x86"]},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=2027416","platforms":["linux"],"architectures":["x86_64"],"binaries":["./debugAdapters/mono.linux-x86_64"]},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=2027403","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"]},{"description":"LLDB 3.8.0 (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"]},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2082216","platforms":["win32"],"binaries":[]}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","identifier":{"value":"ms-vscode.cpptools","_lower":"ms-vscode.cpptools"},"extensionLocation":{"$mid":1,"fsPath":"/home/klaus/.vscode-oss/extensions/ms-vscode.cpptools-0.25.1","path":"/home/klaus/.vscode-oss/extensions/ms-vscode.cpptools-0.25.1","scheme":"file"}},{"name":"csharp","publisher":"ms-vscode","version":"1.21.1","description":"C# for Visual Studio Code (powered by OmniSharp).","displayName":"C#","author":"Microsoft Corporation","license":"SEE LICENSE IN RuntimeLicenses/license.txt","icon":"images/csharpIcon.png","preview":false,"bugs":{"url":"https://github.com/OmniSharp/omnisharp-vscode/issues"},"repository":{"type":"git","url":"https://github.com/OmniSharp/omnisharp-vscode.git"},"categories":["Debuggers","Programming Languages","Linters","Snippets"],"keywords":["multi-root ready",".NET","ASP.NET",".NET Core","dotnet"],"defaults":{"omniSharp":"1.34.2","razor":"1.0.0-alpha3-20190725.1"},"main":"./dist/extension","scripts":{"vscode:prepublish":"tsc -p ./ && webpack --mode production","compile":"tsc -p ./ && gulp tslint","compileDev":"tsc -p ./ && gulp tslint && webpack --mode development","watch":"tsc -watch -p ./","tdd":"mocha --opts ./mocha.opts --watch --watch-extensions ts test/unitTests/**/*.test.ts*","test":"gulp test","test:unit":"gulp test:unit","test:feature":"gulp test:feature","test:integration":"gulp test:integration","test:integration:singleCsproj":"gulp test:integration:singleCsproj","test:integration:slnWithCsproj":"gulp test:integration:slnWithCsproj","test:release":"mocha --opts ./mocha.opts test/releaseTests/**/*.test.ts","test:artifacts":"mocha --opts ./mocha.opts test/artifactTests/**/*.test.ts","postinstall":"node ./node_modules/vscode/bin/install","cov:instrument":"gulp cov:instrument","cov:merge":"gulp cov:merge","cov:merge-html":"gulp cov:merge-html","cov:report":"npm-run-all cov:report:integration cov:report:unit","cov:report:unit":"gulp cov:report:unit","cov:report:integration":"gulp cov:report:integration","unpackage:vsix":"gulp vsix:release:unpackage","gulp":"gulp"},"nyc":{"include":["src/**/*.ts","src/**/*.tsx"],"extension":[".ts",".tsx"],"require":["ts-node/register","source-map-support/register"],"sourceMap":true,"instrument":true},"dependencies":{"async-file":"2.0.2","fs-extra":"7.0.1","http-proxy-agent":"2.1.0","https-proxy-agent":"2.2.1","jsonc-parser":"2.0.3","microsoft.aspnetcore.razor.vscode":"https://download.visualstudio.microsoft.com/download/pr/2fe8c407-5a43-481d-9061-f8c2c66a9135/dca985d33cf2b7e50e5f6530e77869eb/microsoft.aspnetcore.razor.vscode-1.0.0-alpha3-20190725.1.tgz","mkdirp":"0.5.1","node-filter-async":"1.1.1","remove-bom-buffer":"3.0.0","request-light":"0.2.4","rxjs":"6.4.0","semver":"5.6.0","stream":"0.0.2","strip-bom":"3.0.0","tmp":"0.0.33","vscode-debugprotocol":"1.33.0","vscode-extension-telemetry":"0.1.1","yauzl":"2.10.0"},"devDependencies":{"@types/archiver":"2.1.2","@types/chai":"4.1.7","@types/chai-arrays":"1.0.2","@types/chai-as-promised":"7.1.0","@types/chai-string":"1.4.1","@types/del":"3.0.1","@types/fs-extra":"5.0.4","@types/gulp":"4.0.5","@types/gulp-mocha":"0.0.32","@types/istanbul":"0.4.30","@types/minimist":"1.2.0","@types/mkdirp":"0.5.2","@types/mocha":"5.2.5","@types/node":"10.12.24","@types/semver":"5.5.0","@types/tmp":"0.0.33","@types/unzipper":"^0.9.1","@types/yauzl":"2.9.1","archiver":"3.0.0","async-child-process":"1.1.1","async-shelljs":"0.1.2","chai":"4.2.0","chai-arrays":"2.0.0","chai-as-promised":"7.1.1","chai-fs":"2.0.0","chai-string":"1.5.0","codecov":"3.1.0","copyfiles":"2.1.0","cross-env":"5.2.0","del":"3.0.0","find-versions":"3.0.0","get-port":"4.1.0","glob-promise":"3.4.0","gulp":"4.0.0","gulp-mocha":"6.0.0","gulp-tslint":"8.1.3","istanbul":"0.4.5","ltcdr":"2.2.1","minimist":"1.2.0","mocha":"5.2.0","mocha-typescript":"1.1.17","mock-fs":"4.8.0","mock-http-server":"0.2.0","natives":"1.1.6","npm-run-all":"4.1.5","nyc":"13.3.0","plist":"3.0.1","remap-istanbul":"0.13.0","source-map-support":"0.5.10","ts-loader":"5.3.3","ts-node":"8.0.2","tslint":"5.12.1","tslint-microsoft-contrib":"6.0.0","tslint-no-unused-expression-chai":"0.1.4","typescript":"^3.3.3","unzipper":"0.9.10","vsce":"1.57.0","vscode":"1.1.33","webpack":"4.29.3","webpack-cli":"3.2.3"},"runtimeDependencies":[{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.6 / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/917af80d-ecdb-4a83-92d1-42b82148f94a/fab62ad5ade50a87e838359f445438f0/omnisharp-win-x86-1.34.2.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-win-x86-1.34.2.zip","installPath":".omnisharp/1.34.2","platforms":["win32"],"architectures":["x86"],"installTestPath":"./.omnisharp/1.34.2/OmniSharp.exe","platformId":"win-x86","integrity":"CBF00C94123A6BC8B8943B4C5917BD3B0EDD878AD6E3EFA610694417B0DE6BDC"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.6 / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/917af80d-ecdb-4a83-92d1-42b82148f94a/78bd29a64a24a5254e9c048dfea9ef00/omnisharp-win-x64-1.34.2.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-win-x64-1.34.2.zip","installPath":".omnisharp/1.34.2","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.34.2/OmniSharp.exe","platformId":"win-x64","integrity":"606F749C4A1DE60BA81969D6C08ACF9F3BD4D222FF1ECF6F6F9B41F61F040B73"},{"id":"OmniSharp","description":"OmniSharp for OSX","url":"https://download.visualstudio.microsoft.com/download/pr/917af80d-ecdb-4a83-92d1-42b82148f94a/477bf67ad7165c2a58fce76cc02bb4e9/omnisharp-osx-1.34.2.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-osx-1.34.2.zip","installPath":".omnisharp/1.34.2","platforms":["darwin"],"binaries":["./mono.osx","./run"],"installTestPath":"./.omnisharp/1.34.2/run","platformId":"osx","integrity":"D55078F99991F0C26F595F9F161FE33F88EBEC03ACB524027A0E2AA16695C8D7"},{"id":"OmniSharp","description":"OmniSharp for Linux (x86)","url":"https://download.visualstudio.microsoft.com/download/pr/917af80d-ecdb-4a83-92d1-42b82148f94a/4eba7b4eec0344b7e5fe325fc210e52b/omnisharp-linux-x86-1.34.2.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-linux-x86-1.34.2.zip","installPath":".omnisharp/1.34.2","platforms":["linux"],"architectures":["x86","i686"],"binaries":["./mono.linux-x86","./run"],"installTestPath":"./.omnisharp/1.34.2/run","platformId":"linux-x86","integrity":"05A69BC6AC7DDF9ABA041F64DA21A5CCF0874A36AE63BF2E8289BB8B2B79959D"},{"id":"OmniSharp","description":"OmniSharp for Linux (x64)","url":"https://download.visualstudio.microsoft.com/download/pr/917af80d-ecdb-4a83-92d1-42b82148f94a/4a575a7947b592dcf6a422c9bf935b34/omnisharp-linux-x64-1.34.2.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-linux-x64-1.34.2.zip","installPath":".omnisharp/1.34.2","platforms":["linux"],"architectures":["x86_64"],"binaries":["./mono.linux-x86_64","./run"],"installTestPath":"./.omnisharp/1.34.2/run","platformId":"linux-x64","integrity":"A9BBFB04E30F0224679677BF9CFC79503EF64CACE7F2E29EC8B25394CD31985D"},{"id":"Debugger","description":".NET Core Debugger (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/6ebd6da8-bbe3-42f7-924b-aa921730ee2f/efad9a8d86f35c3945b95b8da80845dd/coreclr-debug-win7-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-21-0/coreclr-debug-win7-x64.zip","installPath":".debugger","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.debugger/vsdbg-ui.exe","integrity":"1F426E6D8CA1BA7E067BC9A99974B113DC3C16B34BA963DA76EF23C3B0221D10"},{"id":"Debugger","description":".NET Core Debugger (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/6ebd6da8-bbe3-42f7-924b-aa921730ee2f/ea2e64051a68c1a939395ea4b22131be/coreclr-debug-osx-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-21-0/coreclr-debug-osx-x64.zip","installPath":".debugger","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"EDA155BEE247321876EE59D359196F7AC5D55F54D2A20927C1B737B5723E91EA"},{"id":"Debugger","description":".NET Core Debugger (linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/6ebd6da8-bbe3-42f7-924b-aa921730ee2f/3c87589b7075173f12c4ae114b7020df/coreclr-debug-linux-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-21-0/coreclr-debug-linux-x64.zip","installPath":".debugger","platforms":["linux"],"architectures":["x86_64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"D6EA62622788617163B758F5535E65BD1D010A0D362B422039ED6EE64D84D725"},{"id":"Razor","description":"Razor Language Server (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/2fe8c407-5a43-481d-9061-f8c2c66a9135/50f7bb0d759d162e065eb5f19893c789/razorlanguageserver-win-x64-1.0.0-alpha3-20190725.1.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-win-x64-1.0.0-alpha3-20190725.1.zip","installPath":".razor","platforms":["win32"],"architectures":["x86_64"]},{"id":"Razor","description":"Razor Language Server (Windows / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/2fe8c407-5a43-481d-9061-f8c2c66a9135/0110bcb7b4464554781afc306039427b/razorlanguageserver-win-x86-1.0.0-alpha3-20190725.1.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-win-x86-1.0.0-alpha3-20190725.1.zip","installPath":".razor","platforms":["win32"],"architectures":["x86"]},{"id":"Razor","description":"Razor Language Server (Linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/2fe8c407-5a43-481d-9061-f8c2c66a9135/debf913d2ff1683d04af0215fd51bccc/razorlanguageserver-linux-x64-1.0.0-alpha3-20190725.1.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-linux-x64-1.0.0-alpha3-20190725.1.zip","installPath":".razor","platforms":["linux"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"Razor","description":"Razor Language Server (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/2fe8c407-5a43-481d-9061-f8c2c66a9135/ed5a08c435b5309e2b2a50ea2f86b2bb/razorlanguageserver-osx-x64-1.0.0-alpha3-20190725.1.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-osx-x64-1.0.0-alpha3-20190725.1.zip","installPath":".razor","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./rzls"]}],"engines":{"vscode":"^1.31.0"},"activationEvents":["onDebugInitialConfigurations","onDebugResolve:coreclr","onDebugResolve:clr","onLanguage:csharp","onLanguage:aspnetcorerazor","onCommand:o.restart","onCommand:o.pickProjectAndStart","onCommand:o.showOutput","onCommand:dotnet.restore.project","onCommand:dotnet.restore.all","onCommand:dotnet.generateAssets","onCommand:csharp.downloadDebugger","onCommand:csharp.listProcess","onCommand:csharp.listRemoteProcess","workspaceContains:project.json","workspaceContains:*.csproj","workspaceContains:*.sln","workspaceContains:*.csx","workspaceContains:*.cake","workspaceContains:**/*.csproj","workspaceContains:**/*.sln","workspaceContains:**/*.csx","workspaceContains:**/*.cake"],"contributes":{"configuration":{"title":"C# configuration","properties":{"csharp.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default C# formatter (requires restart)."},"csharp.suppressDotnetInstallWarning":{"type":"boolean","default":false,"description":"Suppress the warning that the .NET Core SDK is not on the path."},"csharp.unitTestDebuggingOptions":{"type":"object","description":"Options to use with the debugger when launching for unit test debugging. Any launch.json option is valid here.","default":{},"properties":{"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"type":{"type":"string","enum":["coreclr","clr"],"description":"Type type of code to debug. Can be either 'coreclr' for .NET Core debugging, or 'clr' for Desktop .NET Framework. 'clr' only works on Windows as the Desktop framework is Windows-only.","default":"coreclr"},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711}}},"csharp.suppressDotnetRestoreNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved."},"csharp.suppressProjectJsonWarning":{"type":"boolean","default":false,"description":"Suppress the warning that project.json is no longer a supported project format for .NET Core applications"},"csharp.suppressHiddenDiagnostics":{"type":"boolean","default":true,"description":"Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane."},"csharp.referencesCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the references CodeLens should be shown."},"csharp.testsCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the run and debug test CodeLens should be show be shown."},"csharp.maxProjectFileCountForDiagnosticAnalysis":{"type":"number","default":1000,"description":"Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely."},"omnisharp.path":{"type":["string","null"],"default":null,"scope":"machine","description":"Specifies the path to OmniSharp. This can be the absolute path to an OmniSharp executable, a specific version number, or \"latest\". If a version number or \"latest\" is specified, the appropriate version of OmniSharp will be downloaded on your behalf."},"omnisharp.useGlobalMono":{"type":"string","default":"auto","scope":"machine","enum":["auto","always","never"],"enumDescriptions":["Automatically launch OmniSharp with \"mono\" if version 5.8.1 or greater is available on the PATH.","Always launch OmniSharp with \"mono\". If version 5.8.1 or greater is not available on the PATH, an error will be printed.","Never launch OmniSharp on a globally-installed Mono."],"description":"Launch OmniSharp with the globally-installed Mono. If set to \"always\", \"mono\" version 5.8.1 or greater must be available on the PATH. If set to \"auto\", OmniSharp will be launched with \"mono\" if version 5.8.1 or greater is available on the PATH."},"omnisharp.monoPath":{"type":["string","null"],"default":null,"scope":"machine","description":"Specifies the path to a mono installation to use when \"useGlobalMono\" is set to \"always\" or \"auto\", instead of the default system one."},"omnisharp.waitForDebugger":{"type":"boolean","default":false,"description":"Pass the --debug flag when launching the OmniSharp server to allow a debugger to be attached."},"omnisharp.loggingLevel":{"type":"string","default":"information","enum":["trace","debug","information","warning","error","critical"],"description":"Specifies the level of logging output from the OmniSharp server."},"omnisharp.autoStart":{"type":"boolean","default":true,"description":"Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command"},"omnisharp.projectLoadTimeout":{"type":"number","default":60,"description":"The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds."},"omnisharp.maxProjectResults":{"type":"number","default":250,"description":"The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250)."},"omnisharp.defaultLaunchSolution":{"type":"string","default":null,"description":"The name of the default solution used at start up if the repo has multiple solutions. e.g.'MyAwesomeSolution.sln'. Default value is `null` which will cause the first in alphabetical order to be chosen."},"omnisharp.useEditorFormattingSettings":{"type":"boolean","default":true,"description":"Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size)."},"omnisharp.minFindSymbolsFilterLength":{"type":"number","default":0,"description":"The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results."},"omnisharp.maxFindSymbolsItems":{"type":"number","default":1000,"description":"The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here."},"omnisharp.disableMSBuildDiagnosticWarning":{"type":"boolean","default":false,"description":"Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log"},"omnisharp.enableMsBuildLoadProjectsOnDemand":{"type":"boolean","default":false,"description":"If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols."},"omnisharp.enableRoslynAnalyzers":{"type":"boolean","default":false,"description":"Enables support for roslyn analyzers, code fixes and rulesets."},"omnisharp.enableEditorConfigSupport":{"type":"boolean","default":false,"description":"Enables support for reading code style, naming convention and analyzer settings from .editorconfig."},"razor.plugin.path":{"type":["string","null"],"default":null,"scope":"machine","description":"Overrides the path to the Razor plugin dll."},"razor.devmode":{"type":"boolean","default":false,"description":"Forces the omnisharp-vscode extension to run in a mode that enables local Razor.VSCode deving."},"razor.disabled":{"type":"boolean","default":false,"description":"Specifies whether to disable Razor language features."},"razor.languageServer.directory":{"type":["string","null"],"default":null,"scope":"machine","description":"Overrides the path to the Razor Language Server directory."},"razor.languageServer.debug":{"type":"boolean","default":false,"description":"Specifies whether to wait for debug attach when launching the language server."},"razor.trace":{"type":"string","default":"Off","enum":["Off","Messages","Verbose"],"enumDescriptions":["Does not log messages from the Razor extension","Logs only some messages from the Razor extension","Logs all messages from the Razor extension"],"description":"Specifies whether to output all messages [Verbose], some messages [Messages] or not at all [Off]."}}},"jsonValidation":[{"fileMatch":"project.json","url":"http://json.schemastore.org/project"},{"fileMatch":"omnisharp.json","url":"http://json.schemastore.org/omnisharp"}],"commands":[{"command":"o.restart","title":"Restart OmniSharp","category":"OmniSharp"},{"command":"o.pickProjectAndStart","title":"Select Project","category":"OmniSharp"},{"command":"dotnet.generateAssets","title":"Generate Assets for Build and Debug","category":".NET"},{"command":"dotnet.restore.project","title":"Restore Project","category":".NET"},{"command":"dotnet.restore.all","title":"Restore All Projects","category":".NET"},{"command":"csharp.downloadDebugger","title":"Download .NET Core Debugger","category":"Debug"},{"command":"csharp.listProcess","title":"List process for attach","category":"CSharp"},{"command":"csharp.listRemoteProcess","title":"List processes on remote connection for attach","category":"CSharp"},{"command":"csharp.setNextStatement","title":"Set Next Statement (.NET)","category":"Debug"},{"command":"csharp.reportIssue","title":"Report an issue","category":"CSharp"},{"command":"extension.showRazorCSharpWindow","title":"Show Razor CSharp","category":"Razor"},{"command":"extension.showRazorHtmlWindow","title":"Show Razor Html","category":"Razor"},{"command":"razor.reportIssue","title":"Report a Razor issue","category":"Razor"}],"keybindings":[{"command":"o.showOutput","key":"Ctrl+Shift+F9","mac":"Cmd+Shift+F9"},{"command":"csharp.setNextStatement","key":"Ctrl+Shift+F10","when":"inDebugMode && debugType == 'coreclr'"},{"command":"csharp.setNextStatement","key":"Ctrl+Shift+F10","when":"inDebugMode && debugType == 'clr'"}],"snippets":[{"language":"csharp","path":"./snippets/csharp.json"}],"debuggers":[{"type":"coreclr","label":".NET Core","enableBreakpointsFor":{"languageIds":["csharp","razor","aspnetcorerazor"]},"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"adapterExecutableCommand":"csharp.coreclrAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Environment variables passed to the program by a file.","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true}}}},"configurationSnippets":[{"label":".NET: Launch .NET Core Console App","description":"Launch a .NET Core Console App with a debugger.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole"}},{"label":".NET: Attach to local .NET Core Console App","description":"Attach a debugger to a .NET Core Console App.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickProcess}\""}},{"label":".NET: Launch a local .NET Core Web App","description":"Launch a .NET Core Web App with both a browser and a debugger.","body":{"name":".NET Core Launch (web)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"serverReadyAction":{"action":"openExternally","pattern":"^\"^\\\\\\\\s*Now listening on:\\\\\\\\s+(https?://\\\\\\\\S+)\""},"env":{"ASPNETCORE_ENVIRONMENT":"Development"},"sourceFileMap":{"/Views":"^\"\\${workspaceFolder}/Views\""}}},{"label":".NET: Launch a remote .NET Core Console App","description":"Launch a .NET Core Console App on a remote machine.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${3:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${4:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}},{"label":".NET: Attach to remote .NET Core Console App","description":"Attach a debugger to a .NET Core Console App on a remote machine.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickRemoteProcess}\"","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${1:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${2:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}}]},{"type":"clr","label":".NET","enableBreakpointsFor":{"languageIds":["csharp","razor","aspnetcorerazor"]},"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"adapterExecutableCommand":"csharp.clrAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Environment variables passed to the program by a file.","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true}}}}}],"languages":[{"id":"aspnetcorerazor","extensions":[".cshtml",".razor"],"mimetypes":["text/x-cshtml"],"configuration":"./src/razor/language-configuration.json"}],"grammars":[{"language":"aspnetcorerazor","scopeName":"text.aspnetcorerazor","path":"./src/razor/syntaxes/aspnetcorerazor.tmLanguage.json"}],"menus":{"editor/title":[{"command":"extension.showRazorCSharpWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"extension.showRazorHtmlWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"razor.reportIssue","when":"resourceLangId == aspnetcorerazor"}],"editor/context":[{"command":"csharp.setNextStatement","when":"inDebugMode && debugType == 'coreclr'"},{"command":"csharp.setNextStatement","when":"inDebugMode && debugType == 'clr'"}]}},"uuid":"d0bfc4ab-1d3a-4487-8782-7cf6027b4fff","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.csharp","identifier":{"value":"ms-vscode.csharp","_lower":"ms-vscode.csharp"},"extensionLocation":{"$mid":1,"fsPath":"/home/klaus/.vscode-oss/extensions/ms-vscode.csharp-1.21.1","path":"/home/klaus/.vscode-oss/extensions/ms-vscode.csharp-1.21.1","scheme":"file"}},{"name":"java","displayName":"Language Support for Java(TM) by Red Hat","description":"Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...","author":"Red Hat","icon":"icons/icon128.png","license":"EPL-1.0","version":"0.48.0","publisher":"redhat","bugs":"https://github.com/redhat-developer/vscode-java/issues","preview":true,"enableProposedApi":false,"engines":{"vscode":"^1.36.0"},"repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-java"},"categories":["Programming Languages","Linters","Formatters","Snippets"],"keywords":["multi-root ready"],"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:build.gradle","workspaceContains:.classpath"],"main":"./dist/extension","contributes":{"languages":[{"id":"java","extensions":[".class"],"configuration":"./language-configuration.json"}],"snippets":[{"language":"java","path":"./snippets/java.json"}],"configuration":{"type":"object","title":"Java configuration","properties":{"java.home":{"type":["string","null"],"default":null,"description":"Specifies the folder path to the JDK (8 or more recent) used to launch the Java Language Server.\nOn Windows, backslashes must be escaped, i.e.\n\"java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"","scope":"window"},"java.jdt.ls.vmargs":{"type":["string","null"],"default":"-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication","description":"Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-noverify -Xmx1G  -XX:+UseG1GC -XX:+UseStringDeduplication` to bypass class verification, increase the heap size to 1GB and enable String deduplication with the G1 Garbage collector","scope":"window"},"java.errors.incompleteClasspath.severity":{"type":["string"],"enum":["ignore","info","warning","error"],"default":"warning","description":"Specifies the severity of the message when the classpath is incomplete for a Java file","scope":"window"},"java.configuration.checkProjectSettingsExclusions":{"type":"boolean","default":true,"description":"Checks if the extension-generated project settings files (.project, .classpath, .factorypath, .settings/) should be excluded from the file explorer.","scope":"window"},"java.configuration.updateBuildConfiguration":{"type":["string"],"enum":["disabled","interactive","automatic"],"default":"interactive","description":"Specifies how modifications on build files update the Java classpath/configuration","scope":"window"},"java.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Java language server.","scope":"window"},"java.import.maven.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Maven importer.","scope":"window"},"java.import.gradle.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Gradle importer.","scope":"window"},"java.import.gradle.wrapper.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Gradle wrapper.","scope":"window"},"java.import.gradle.version":{"type":"string","default":null,"description":"Gradle version, used if the gradle wrapper is missing or disabled.","scope":"window"},"java.import.gradle.arguments":{"type":"string","default":null,"description":"Arguments to pass to Gradle.","scope":"window"},"java.import.gradle.jvmArguments":{"type":"string","default":null,"description":"JVM arguments to pass to Gradle.","scope":"window"},"java.import.gradle.home":{"type":"string","default":null,"description":"Setting for GRADLE_HOME.","scope":"window"},"java.maven.downloadSources":{"type":"boolean","default":false,"description":"Enable/disable eager download of Maven source artifacts.","scope":"window"},"java.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable the references code lens.","scope":"window"},"java.signatureHelp.enabled":{"type":"boolean","default":false,"description":"Enable/disable the signature help.","scope":"window"},"java.implementationsCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable the implementations code lens.","scope":"window"},"java.configuration.maven.userSettings":{"type":"string","default":null,"description":"Path to Maven's settings.xml","scope":"window"},"java.format.enabled":{"type":"boolean","default":true,"description":"Enable/disable default Java formatter","scope":"window"},"java.saveActions.organizeImports":{"type":"boolean","default":false,"description":"Enable/disable auto organize imports on save action","scope":"window"},"java.import.exclusions":{"type":"array","description":"Configure glob patterns for excluding folders","default":["**/node_modules/**","**/.metadata/**","**/archetype-resources/**","**/META-INF/maven/**"],"scope":"window"},"java.contentProvider.preferred":{"type":"string","description":"Preferred content provider (a 3rd party decompiler id, usually)","default":null,"scope":"window"},"java.autobuild.enabled":{"type":"boolean","default":true,"description":"Enable/disable the 'auto build'","scope":"window"},"java.maxConcurrentBuilds":{"type":"integer","default":1,"description":"Max simultaneous project builds","scope":"window","minimum":1},"java.completion.enabled":{"type":"boolean","default":true,"description":"Enable/disable code completion support","scope":"window"},"java.completion.overwrite":{"type":"boolean","default":true,"description":"When set to true, code completion overwrites the current text. When set to false, code is simply added instead.","scope":"window"},"java.completion.guessMethodArguments":{"type":"boolean","default":false,"description":"When set to true, method arguments are guessed when a method is selected from as list of code assist proposals.","scope":"window"},"java.completion.favoriteStaticMembers":{"type":"array","description":"Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.","default":["org.junit.Assert.*","org.junit.Assume.*","org.junit.jupiter.api.Assertions.*","org.junit.jupiter.api.Assumptions.*","org.junit.jupiter.api.DynamicContainer.*","org.junit.jupiter.api.DynamicTest.*","org.mockito.Mockito.*","org.mockito.ArgumentMatchers.*","org.mockito.Answers.*"],"scope":"window"},"java.completion.importOrder":{"type":"array","description":"Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group.","default":["java","javax","com","org"],"scope":"window"},"java.foldingRange.enabled":{"type":"boolean","default":true,"description":"Enable/disable smart folding range support. If disabled, it will use the default indentation-based folding range provided by VS Code.","scope":"window"},"java.progressReports.enabled":{"type":"boolean","description":"[Experimental] Enable/disable progress reports from background processes on the server.","default":true,"scope":"window"},"java.format.settings.url":{"type":"string","description":"Specifies the url or file path to the [Eclipse formatter xml settings](https://github.com/redhat-developer/vscode-java/wiki/Formatter-settings).","default":null,"scope":"window"},"java.format.settings.profile":{"type":"string","description":"Optional formatter profile name from the Eclipse formatter settings.","default":null,"scope":"window"},"java.format.comments.enabled":{"type":"boolean","description":"Includes the comments during code formatting.","default":true,"scope":"window"},"java.format.onType.enabled":{"type":"boolean","description":"Enable/disable automatic block formatting when typing `;`, `<enter>` or `}`","default":true,"scope":"window"},"java.codeGeneration.hashCodeEquals.useJava7Objects":{"type":"boolean","description":"Use Objects.hash and Objects.equals when generating the hashCode and equals methods. This setting only applies to Java 7 and higher.","default":false,"scope":"window"},"java.codeGeneration.hashCodeEquals.useInstanceof":{"type":"boolean","description":"Use 'instanceof' to compare types when generating the hashCode and equals methods.","default":false,"scope":"window"},"java.codeGeneration.useBlocks":{"type":"boolean","description":"Use blocks in 'if' statements when generating the methods.","default":false,"scope":"window"},"java.codeGeneration.generateComments":{"type":"boolean","description":"Generate method comments when generating the methods.","default":false,"scope":"window"},"java.codeGeneration.toString.template":{"type":"string","description":"The template for generating the toString method.","default":"${object.className} [${member.name()}=${member.value}, ${otherMembers}]"},"java.codeGeneration.toString.codeStyle":{"type":"string","enum":["STRING_CONCATENATION","STRING_BUILDER","STRING_BUILDER_CHAINED","STRING_FORMAT"],"enumDescriptions":["String concatenation","StringBuilder/StringBuffer","StringBuilder/StringBuffer - chained call","String.format/MessageFormat"],"description":"The code style for generating the toString method.","default":"STRING_CONCATENATION"},"java.codeGeneration.toString.skipNullValues":{"type":"boolean","description":"Skip null values when generating the toString method.","default":false,"scope":"window"},"java.codeGeneration.toString.listArrayContents":{"type":"boolean","description":"List contents of arrays instead of using native toString().","default":true,"scope":"window"},"java.codeGeneration.toString.limitElements":{"type":"integer","description":"Limit number of items in arrays/collections/maps to list, if 0 then list all.","default":0,"scope":"window"},"java.selectionRange.enabled":{"type":"boolean","default":true,"description":"Enable/disable Smart Selection support for Java. Disabling this option will not affect the VS Code built-in word-based and bracket-based smart selection.","scope":"window"}}},"commands":[{"command":"java.projectConfiguration.update","title":"Update project configuration","category":"Java"},{"command":"java.open.serverLog","title":"Open Java language server log file","category":"Java"},{"command":"java.open.clientLog","title":"Open Java extension log file","category":"Java"},{"command":"java.open.logs","title":"Open all log files","category":"Java"},{"command":"java.workspace.compile","title":"Force Java compilation","category":"Java"},{"command":"java.open.formatter.settings","title":"Open Java formatter settings","category":"Java"},{"command":"java.clean.workspace","title":"Clean the Java language server workspace","category":"Java"},{"command":"java.project.updateSourceAttachment","title":"Attach Source","category":"Java"},{"command":"java.project.addToSourcePath","title":"Add Folder to Java Source Path","category":"Java"},{"command":"java.project.removeFromSourcePath","title":"Remove Folder from Java Source Path","category":"Java"},{"command":"java.project.listSourcePaths","title":"List all Java source paths","category":"Java"}],"keybindings":[{"command":"java.projectConfiguration.update","key":"shift+alt+u","when":"editorFocus"},{"command":"java.workspace.compile","key":"shift+alt+b"}],"menus":{"explorer/context":[{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(pom.xml)$/","group":"1_javaactions"},{"when":"explorerResourceIsFolder&&javaLSReady","command":"java.project.addToSourcePath","group":"1_javaactions@1"},{"when":"explorerResourceIsFolder&&javaLSReady","command":"java.project.removeFromSourcePath","group":"1_javaactions@2"}],"editor/context":[{"command":"java.project.updateSourceAttachment","when":"editorReadonly && editorLangId == java","group":"1_javaactions"},{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(pom.xml)$/","group":"1_javaactions"}],"commandPalette":[{"command":"java.projectConfiguration.update","when":"javaLSReady"},{"command":"java.workspace.compile","when":"javaLSReady"},{"command":"java.project.listSourcePaths","when":"javaLSReady"},{"command":"java.project.updateSourceAttachment","when":"false"},{"command":"java.project.addToSourcePath","when":"false"},{"command":"java.project.removeFromSourcePath","when":"false"}]}},"scripts":{"vscode:prepublish":"webpack --mode production","compile":"tsc -p ./&webpack --mode development","watch":"webpack --mode development --watch --info-verbosity verbose","pretest":"npm run compile","test":"node ./out/test/runtest.js","build-server":"./node_modules/.bin/gulp build_server","watch-server":"./node_modules/.bin/gulp watch_server","tslint":"tslint -p ."},"devDependencies":{"@types/glob":"5.0.30","@types/mocha":"^5.2.5","@types/node":"^6.0.40","@types/vscode":"^1.36.0","@types/winston":"^2.4.4","gulp":"^4.0.0","gulp-decompress":"2.0.1","gulp-download":"0.0.1","mocha":"^5.2.0","ts-loader":"^5.3.1","tslint":"^5.11.0","typescript":"^3.4.1","typescript-tslint-plugin":"^0.3.1","vscode-test":"^1.0.0","webpack":"^4.27.1","webpack-cli":"^3.1.2","lodash.template":">=4.5.0"},"dependencies":{"vscode-languageclient":"5.3.0-next.6","find-java-home":"1.0.0","tmp":"^0.0.33","path-exists":"^3.0.0","expand-home-dir":"^0.0.3","glob":"^7.1.3","winston":"^3.2.1","winston-daily-rotate-file":"^3.10.0"},"uuid":"198a707e-28af-4e84-8610-6e2f628dd12d","isBuiltin":false,"isUnderDevelopment":false,"id":"redhat.java","identifier":{"value":"redhat.java","_lower":"redhat.java"},"extensionLocation":{"$mid":1,"fsPath":"/home/klaus/.vscode-oss/extensions/redhat.java-0.48.0","path":"/home/klaus/.vscode-oss/extensions/redhat.java-0.48.0","scheme":"file"}}]}